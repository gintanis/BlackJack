{\rtf1\ansi\ansicpg1252\cocoartf2576
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red252\green95\blue163;\red31\green31\blue36;\red255\green255\blue255;
\red208\green191\blue105;\red208\green191\blue105;\red108\green121\blue134;\red252\green106\blue93;}
{\*\expandedcolortbl;;\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c100000\c100000\c100000\c85000;
\csgenericrgb\c81569\c74902\c41177;\csgenericrgb\c81498\c74939\c41233;\csgenericrgb\c42394\c47462\c52518;\csgenericrgb\c98912\c41558\c36568;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\b\fs24 \cf2 \cb3 import
\f1\b0 \cf4  random\
\
deck_of_cards = [\cf5 'A'\cf4 ,\cf6 2\cf4 ,\cf6 3\cf4 ,\cf6 4\cf4 ,\cf6 5\cf4 ,\cf6 6\cf4 ,\cf6 7\cf4 ,\cf6 8\cf4 ,\cf6 9\cf4 ,\cf6 10\cf4 ,\cf5 'J'\cf4 ,\cf5 'Q'\cf4 ,\cf5 'K'\cf4 ,\cf5 'A'\cf4 ,\cf6 2\cf4 ,\cf6 3\cf4 ,\cf6 4\cf4 ,\cf6 5\cf4 ,\cf6 6\cf4 ,\cf6 7\cf4 ,\cf6 8\cf4 ,\cf6 9\cf4 ,\cf6 10\cf4 ,\cf5 'J'\cf4 ,\cf5 'Q'\cf4 ,\cf5 'K'\cf4 ,\cf5 'A'\cf4 ,\cf6 2\cf4 ,\cf6 3\cf4 ,\cf6 4\cf4 ,\cf6 5\cf4 ,\cf6 6\cf4 ,\cf6 7\cf4 ,\cf6 8\cf4 ,\cf6 9\cf4 ,\cf6 10\cf4 ,\cf5 'J'\cf4 ,\cf5 'Q'\cf4 ,\cf5 'K'\cf4 ,\cf5 'A'\cf4 ,\cf6 2\cf4 ,\cf6 3\cf4 ,\cf6 4\cf4 ,\cf6 5\cf4 ,\cf6 6\cf4 ,\cf6 7\cf4 ,\cf6 8\cf4 ,\cf6 9\cf4 ,\cf6 10\cf4 ,\cf5 'J'\cf4 ,\cf5 'Q'\cf4 ,\cf5 'K'\cf4 ]\

\f0\b \cf2 def
\f1\b0 \cf4  blackjack():\
    
\f0\b \cf2 global
\f1\b0 \cf4  deck_of_cards\
    player_cards = []  \
    
\f0\b \cf2 while
\f1\b0 \cf4  get_points(player_cards) < \cf6 21\cf4 :\
       \cf7 #for elements in deck_of_cards:\cf4 \
       hit_me = input(\cf8 "would you like to go? (y or n): "\cf4 )\
       
\f0\b \cf2 if
\f1\b0 \cf4  hit_me == \cf5 'y'\cf4 :\
          \cf7 #if elements not in player_cards:\cf4 \
          player_cards.append(random.choice(deck_of_cards))\
          print(player_cards)\
       
\f0\b \cf2 if
\f1\b0 \cf4  hit_me == \cf5 'n'\cf4 :\
          
\f0\b \cf2 break
\f1\b0 \cf4 \
    
\f0\b \cf2 if
\f1\b0 \cf4  get_points(player_cards) > \cf6 21\cf4 :\
       print(\cf8 "Sorry, you lost"\cf4 )\
    
\f0\b \cf2 if
\f1\b0 \cf4  get_points(player_cards) == \cf6 21\cf4 :\
       print(\cf8 "You won!"\cf4 ) \
\

\f0\b \cf2 def
\f1\b0 \cf4  get_points(player_cards):\
    points = \cf6 0\cf4 \
    
\f0\b \cf2 for
\f1\b0 \cf4  card 
\f0\b \cf2 in
\f1\b0 \cf4  player_cards:\
       
\f0\b \cf2 if
\f1\b0 \cf4  card == \cf5 'A'\cf4 :\
          points = points + \cf6 11\cf4 \
       
\f0\b \cf2 elif
\f1\b0 \cf4  card == \cf5 'a'\cf4 :\
          points = points + \cf6 1\cf4 \
       
\f0\b \cf2 elif
\f1\b0 \cf4  card == \cf5 'J'\cf4  
\f0\b \cf2 or
\f1\b0 \cf4  card == \cf5 'Q'\cf4  
\f0\b \cf2 or
\f1\b0 \cf4  card == \cf5 'K'\cf4 :\
          points = points + \cf6 10\cf4 \
       
\f0\b \cf2 else
\f1\b0 \cf4 :\
          points = points + card\
    
\f0\b \cf2 if
\f1\b0 \cf4  \cf5 'A'\cf4  
\f0\b \cf2 in
\f1\b0 \cf4  player_cards 
\f0\b \cf2 and
\f1\b0 \cf4  points > \cf6 21\cf4 :\
       points = points - \cf6 10\cf4 \
       player_cards[player_cards.index(\cf5 'A'\cf4 )] = \cf5 'a'\cf4 \
    print(points)\
    
\f0\b \cf2 return
\f1\b0 \cf4  points\
\
\

\f0\b \cf2 def
\f1\b0 \cf4  dealer():\
    
\f0\b \cf2 global
\f1\b0 \cf4  deck_of_cards\
    computer_cards = []\
    points = \cf6 0\cf4 \
    
\f0\b \cf2 while
\f1\b0 \cf4  points < \cf6 21\cf4 :\
       \cf7 #for elements in deck_of_cards:\cf4 \
          \cf7 #if elements not in player_cards:\cf4 \
          computer_cards.append(random.choice(deck_of_cards))\
          print(computer_cards)\
\
   \
                \

\f0\b \cf2 def
\f1\b0 \cf4  record_number_sets():\
    active = 
\f0\b \cf2 True
\f1\b0 \cf4 \
    numbers = []\
    
\f0\b \cf2 while
\f1\b0 \cf4  active == 
\f0\b \cf2 True
\f1\b0 \cf4 :\
        question = input(\cf5 'Would you like to add another number? '\cf4 )\
        
\f0\b \cf2 if
\f1\b0 \cf4  question == \cf5 'yes'\cf4 :\
            input_number = input(\cf5 'Give me a number '\cf4 )\
            numbers.append(input_number)\
            numbers.append(\cf5 '    '\cf4 )\
        
\f0\b \cf2 else
\f1\b0 \cf4 :\
            
\f0\b \cf2 break
\f1\b0 \cf4 \
}